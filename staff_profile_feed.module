<?php

/**
 * Implements hook_cron()
 * Runs staff_profile_feed_delete_removed() and staff_profile_feed_reload()
 * Waits 12 hours from last checked time.
 */
function staff_profile_feed_cron() {
  $fid = \Drupal::config('staff_profile_feed.settings')->get('feed_id');
  $feed = \Drupal::entityTypeManager()->getStorage('aggregator_feed')->load($fid);
  if ($now > $feed->getLastCheckedTime() + 43200) {
    staff_profile_feed_delete_removed();
    staff_profile_feed_reload();
  }
}

/**
 * Updates this feed
 * run using "drush ev 'staff_profile_feed_reload()'"
 * Only updates when feed sha256 hash changes, does not remove
 */
function staff_profile_feed_reload() {
  $fid = \Drupal::config('staff_profile_feed.settings')->get('feed_id');
  $feed = \Drupal::entityTypeManager()->getStorage('aggregator_feed')->load($fid);
  $feed->refreshItems();
}

/**
 * Deletes items older than $hours
 * Run using "drush ev 'staff_profile_feed_delete_old($hours)'"
 */
function staff_profile_feed_delete_old($hours) {
  $fid = \Drupal::config('staff_profile_feed.settings')->get('feed_id');
  $storage = \Drupal::entityTypeManager()->getStorage('aggregator_item');
  $items = $storage->loadByFeed($fid);
  $now = time();

  foreach ($items as $item) {
    if ($item->getPostedTime() + ($hours*3600) < $now) {
      $item->delete();
    }
  }
}

/**
 * Delete feed items removed from source rss feed
 * Can be run using "drush ev 'staff_profile_feed_delete_removed()'"
 */
function staff_profile_feed_delete_removed() {
  $fid = \Drupal::config('staff_profile_feed.settings')->get('feed_id');
  $storage = \Drupal::entityTypeManager()->getStorage('aggregator_item');
  $items = $storage->loadByFeed($fid);
  $feed = \Drupal::entityTypeManager()->getStorage('aggregator_feed')->load($fid);
  $feed_url = $feed->getUrl();

  $plugin_definition = \Drupal::service('plugin.manager.aggregator.fetcher')->getDefinition('aggregator');
  $fetcher = \Drupal\aggregator\Plugin\aggregator\fetcher\DefaultFetcher::create(\Drupal::getContainer(),array(),'aggregator',$plugin_definition);
  $parser = new Drupal\aggregator\Plugin\aggregator\parser\DefaultParser();

  try {
    $success = $fetcher->fetch($feed);
  } catch (PluginException $e) {
    \Drupal::logger('staff_profile_feed')->warning($e);
  }


  $hash = hash('sha256', $feed->source_string);
  $has_new_content = $success /*&& $feed->getHash() != $hash*/;
  if ($has_new_content) {
    try {
      if ($parser->parse($feed)) {
        if (!$feed->getWebsiteUrl()) {
          $feed->setWebsiteUrl($feed->getUrl());
        }
        //$feed->setHash($hash);
        $feed->save();

        if ($feed->getUrl() != $feed_url) {
          \Drupal::logger('staff_profile_feed')->notice('Updated URL for feed ' . $feed->label() . ' to ' . $feed->getUrl() . '.');
        }
        \Drupal::logger('staff_profile_feed')->notice('Syndicated content from ' . $feed->label() . ' has changed.');

        $deleted_items = 0;
        if (!empty($feed->items)) {
          foreach ($items as $litem) {
            $removed = TRUE;
            foreach ($feed->items as $fitem) {
              if ($litem->getGuid() == $fitem['guid']) {
                $removed = FALSE;
              }
            }
            if ($removed) {
              $deleted_items += 1;
              $litem->delete();
            }
          }
        }
        \Drupal::logger('staff_profile_feed')->notice('Removed ' . $deleted_items . ' profile(s).');
      }
    } catch (PluginException $e) {
      \Drupal::logger('staff_profile_feed')->warning($e);
    }
  }
}

function load_json_to_taxonomy() {
  $config = \Drupal::config('staff_profile_feed.settings');
  $url = $config->get('staff_profile_json_url') . "/" . preg_replace('#[ -]+#', '-', $config->get('county_to_create_feed'));
  $json_str = file_get_contents($url);
  $decoded = json_decode($json_str, TRUE);
  #TODO add this to settings as button and add to sort
}
